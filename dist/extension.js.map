{"version":3,"file":"extension.js","mappings":"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","sources":["webpack://yapi-json-model/./src/transfomerAll.ts","webpack://yapi-json-model/./src/transfomerSelect.ts","webpack://yapi-json-model/./src/utils.ts","webpack://yapi-json-model/external commonjs \"vscode\"","webpack://yapi-json-model/webpack/bootstrap","webpack://yapi-json-model/./src/extension.ts"],"sourcesContent":["/*\n * @Author: jinwenwu\n * @Date: 2021-11-10 11:25:38\n * @LastEditors: jinwenwu\n * @LastEditTime: 2021-11-10 13:57:29\n * @Description: 转换文件中的所有文本\n */\nimport * as vscode from \"vscode\";\nconst utils = require(\"./utils\");\n\nmodule.exports = function (context: any) {\n  let disposable = vscode.commands.registerCommand(\n    \"yapi-json-model.jsonModelAll\",\n    (uri) => {\n      const document = vscode.window.activeTextEditor!.document;\n      const word = document.getText(\n        document.getWordRangeAtPosition(\n          new vscode.Position(document.lineCount + 1, 0)\n        )\n      );\n      const resultText = utils.removeHeaderNotes(word);\n      const isJSON = utils.isJSON(resultText);\n      if (isJSON) {\n        const canTransfomer = utils.judgeCanTransfomer(resultText);\n        if (canTransfomer) {\n          const newText = utils.createModelFile(resultText, true);\n          vscode.window.activeTextEditor!.edit((editBuilder) => {\n            const end = new vscode.Position(\n              vscode.window.activeTextEditor!.document.lineCount + 1,\n              0\n            );\n            editBuilder.replace(\n              new vscode.Range(new vscode.Position(0, 0), end),\n              newText\n            );\n          });\n        } else {\n          vscode.window.showInformationMessage(\n            \"当前JSON字符串不满足可以转化格式要求，请检查JSON格式\"\n          );\n        }\n      } else {\n        vscode.window.showInformationMessage(\"请输入正确的JSON字符串\");\n      }\n    }\n  );\n\n  context.subscriptions.push(disposable);\n};\n","/*\n * @Author: jinwenwu\n * @Date: 2021-11-10 11:29:02\n * @LastEditors: jinwenwu\n * @LastEditTime: 2021-11-11 10:17:46\n * @Description: 转换文件中的选中的文本\n */\nimport * as vscode from \"vscode\";\nconst utils = require(\"./utils\");\n\nmodule.exports = function (context: any) {\n  let disposable = vscode.commands.registerCommand(\n    \"yapi-json-model.jsonModelSelect\",\n    (uri) => {\n      const editor = vscode.window.activeTextEditor;\n      const document = editor!.document;\n      const start = editor!.selection.start;\n      const end = editor!.selection.end;\n      const word = document.getText(\n        new vscode.Range(start.line, start.character, end.line, end.character)\n      );\n\n      const resultText = utils.removeHeaderNotes(word);\n      const isJSON = utils.isJSON(resultText);\n      if (isJSON) {\n        const canTransfomer = utils.judgeCanTransfomer(resultText);\n        if (canTransfomer) {\n          const newText = utils.createModelFile(resultText, false);\n          vscode.window.activeTextEditor!.edit((editBuilder) => {\n            editBuilder.replace(new vscode.Range(start, end), newText);\n          });\n        } else {\n          vscode.window.showInformationMessage(\n            \"当前JSON字符串不满足可以转化格式要求，请检查JSON格式\"\n          );\n        }\n      } else {\n        vscode.window.showInformationMessage(\"请输入正确的JSON字符串\");\n      }\n    }\n  );\n\n  context.subscriptions.push(disposable);\n};\n","/*\n * @Author: jinwenwu\n * @Date: 2021-11-09 15:04:01\n * @LastEditors: jinwenwu\n * @LastEditTime: 2021-11-11 20:28:26\n * @Description: 工具类\n */\nconst utils = {\n  /**\n   * 将一个单词首字母大写并返回\n   * @param {*} word 某个字符串\n   */\n  upperFirstLetter(word: string) {\n    return (word || \"\").replace(/^\\w/, (m) => m.toUpperCase());\n  },\n\n  /**\n   * 移除头部注释\n   * @param {*} text 某个字符串\n   */\n  removeHeaderNotes(text: string) {\n    if (text.startsWith(\"/*\")) {\n      // 含有头部注释\n      const endIndex = text.indexOf(\"*/\");\n      const result = text.substr(endIndex + 2, text.length - endIndex - 2);\n      return result;\n    } else {\n      return text;\n    }\n  },\n\n  /**\n   * 判断是否是Json字符串\n   * @param {*} text 某个字符串\n   */\n  isJSON(text: string) {\n    if (typeof text === \"string\") {\n      try {\n        const obj = JSON.parse(text);\n        if (typeof obj === \"object\" && obj) {\n          return true;\n        } else {\n          return false;\n        }\n      } catch (e) {\n        return false;\n      }\n    }\n    return false;\n  },\n\n  /**\n   * 判断Json字符串是否可以被正确转换\n   * @param {*} text 某个字符串\n   */\n  judgeCanTransfomer(text: string) {\n    const obj = JSON.parse(text);\n    const keys = Object.keys(obj);\n    if (keys.length === 1) {\n      const subObj = obj[keys[0]];\n      if (\n        subObj.type &&\n        (subObj.type === \"object\" || subObj.type === \"array\")\n      ) {\n        return true;\n      }\n    }\n    return false;\n  },\n\n  /**\n   * 生成对应的model文件内容\n   * @param {*} text 某个字符串\n   */\n  createModelFile(text: string, addType: boolean) {\n    const obj = JSON.parse(text);\n    const resultText = this.createModelDto(obj);\n    if (addType) {\n      return `import { Type } from 'class-transformer'; \\n \\n${resultText}`;\n    } else {\n      return resultText;\n    }\n  },\n\n  /**\n   * 根据对象生成model模型\n   * @param {*} obj 某个对象\n   */\n  createModelDto(obj: any) {\n    let resultText = \"\";\n    const keys = Object.keys(obj);\n    const subObj = obj[keys[0]];\n    if (subObj.type === \"object\") {\n      const nextObj = subObj.properties;\n      const objStr = this.createDtoStr(keys[0], nextObj);\n      resultText += `${objStr} \\n`;\n    } else if (subObj.type === \"array\") {\n      const itemObj = subObj.items;\n      resultText = `export class ${keys[0]}Dto { \\n`;\n      if (itemObj.type === \"object\") {\n        resultText += `@Type(() => ItemsDto) \\n`;\n        resultText += `public items?: ItemsDto;\\n`;\n        resultText += `} \\n`;\n        const objStr = this.createDtoStr(\"items\", itemObj.properties);\n        resultText += `${objStr} \\n`;\n      } else {\n        resultText += `public items?: ${itemObj.type}[]; \\n`;\n        resultText += `} \\n`;\n      }\n    }\n\n    return resultText;\n  },\n\n  /**\n   * 根据name和其子值，生成Dto\n   * @param {*} objName 对象名\n   * @param {*} subObj 子值\n   */\n  createDtoStr(objName: string, subObj: any) {\n    const name = utils.upperFirstLetter(objName);\n    let resultText = `export class ${name}Dto { \\n`;\n    const keys = Object.keys(subObj);\n    let objAry: any[] = [];\n    keys.map((item: string) => {\n      const nextObj = subObj[item];\n      const itemName = utils.upperFirstLetter(item);\n      if (nextObj.title) {\n        resultText += `// ${nextObj.title} \\n`;\n      } else if (nextObj.description) {\n        resultText += `// ${nextObj.description} \\n`;\n      }\n      if (nextObj.type === \"object\") {\n        resultText += `@Type(() => ${itemName}Dto) \\n`;\n        resultText += `public ${item}?: ${itemName}Dto;\\n`;\n        const properObj = nextObj.properties;\n        objAry.push({ objName: item, subObj: properObj });\n      } else if (nextObj.type === \"array\") {\n        const items = nextObj.items;\n        if (items.type === \"object\") {\n          resultText += `@Type(() => ${itemName}Dto) \\n`;\n          resultText += `public ${item}?: ${itemName}Dto[];\\n`;\n          const properObj = items.properties;\n          objAry.push({ objName: item, subObj: properObj });\n        } else {\n          resultText += `public ${item}?: ${items.type}[]; \\n`;\n        }\n      } else if (nextObj.type === \"string\") {\n        resultText += `public ${item}?: string; \\n`;\n      } else if (nextObj.type === \"number\") {\n        resultText += `public ${item}?: number; \\n`;\n      } else if (nextObj.type === \"boolean\") {\n        resultText += `public ${item}?: boolean; \\n`;\n      }\n    });\n    resultText += `} \\n`;\n\n    objAry.map((item) => {\n      const otherStr = this.createDtoStr(item.objName, item.subObj);\n      resultText += `\\n${otherStr} \\n`;\n    });\n\n    return resultText;\n  },\n};\n\nmodule.exports = utils;\n","module.exports = require(\"vscode\");","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","/*\n * @Author: jinwenwu\n * @Date: 2021-11-09 13:53:14\n * @LastEditors: jinwenwu\n * @LastEditTime: 2021-11-11 10:11:07\n * @Description: file content\n */\n// The module 'vscode' contains the VS Code extensibility API\n// Import the module and reference it with the alias vscode in your code below\nimport * as vscode from \"vscode\";\nconst utils = require(\"./utils\");\n\n// this method is called when your extension is activated\n// your extension is activated the very first time the command is executed\nexport function activate(context: vscode.ExtensionContext) {\n  console.log(\n    'Congratulations, your extension \"zhoupu-json-model\" is now active!'\n  );\n  require(\"./transfomerAll\")(context);\n  require(\"./transfomerSelect\")(context);\n}\nexport function deactivate() {}\n"],"names":["utils","module","exports","context","disposable","vscode","commands","registerCommand","uri","document","window","activeTextEditor","word","getText","getWordRangeAtPosition","Position","lineCount","resultText","removeHeaderNotes","isJSON","judgeCanTransfomer","newText","createModelFile","edit","editBuilder","end","replace","Range","showInformationMessage","subscriptions","push","editor","start","selection","line","character","upperFirstLetter","m","toUpperCase","text","startsWith","endIndex","indexOf","substr","length","obj","JSON","parse","e","keys","Object","subObj","type","addType","this","createModelDto","nextObj","properties","createDtoStr","itemObj","items","objName","objAry","map","item","itemName","title","description","properObj","otherStr","require","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","undefined","__webpack_modules__","console","log"],"sourceRoot":""}